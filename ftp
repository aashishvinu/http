#include <arpa/inet.h>
#include <fcntl.h>
#include <netinet/in.h>
#include <stdio.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
void main() {
struct sockaddr_in server_address;
int socket_descriptor, character_count, file_length, i;
char buffer_1[3024], buffer_2[3000];
socket_descriptor = socket(AF_INET, SOCK_STREAM, 0);
server_address.sin_family = AF_INET;
server_address.sin_port = htons(6003);
server_address.sin_addr.s_addr = inet_addr("127.0.0.1");
connect(socket_descriptor, (struct sockaddr *)&server_address, sizeof(server_address));
printf("\nEnter the filename:\n");
character_count = read(0, buffer_1, sizeof(buffer_1));
buffer_1[character_count - 1] = '\0';
write(socket_descriptor, buffer_1, character_count);
file_length = read(socket_descriptor, buffer_2, sizeof(buffer_2));
if (file_length == 0)
printf("\n\nFile not present....!!!");
else {
printf("\n\nPrinting content of file:\n");
for (i = 0; i < file_length; i++)
printf("%c", buffer_2[i]);
printf("\nReceived requested file\n\n");
}
close(socket_descriptor);
}

-

#include <arpa/inet.h>
#include <fcntl.h>
#include <stdio.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>
#define BUFSIZE 1024
#define PORT_ADDR 6003
#define QSIZE 5
void main()
{
struct sockaddr_in server_address, client_address;
int i, socket_descriptor_1, socket_descriptor_2, size_of_client_address, file_descriptor,
character_count;
char buffer_1[BUFSIZE], buffer_2[BUFSIZE];
socket_descriptor_1 = socket(AF_INET, SOCK_STREAM, 0);
server_address.sin_family = AF_INET;server_address.sin_port = htons(PORT_ADDR);
server_address.sin_addr.s_addr = htonl(INADDR_ANY);
bind(socket_descriptor_1, (struct sockaddr *)&server_address, sizeof(server_address));
listen(socket_descriptor_1, QSIZE);
size_of_client_address = sizeof(client_address);
socket_descriptor_2 = accept(socket_descriptor_1, (struct sockaddr *)&client_address,
&size_of_client_address);
printf("\nRequest accepted...\n");
close(socket_descriptor_1);
character_count = read(socket_descriptor_2, buffer_1, BUFSIZE);
buffer_1[character_count] = '\0';
printf("\nFilename is %s", buffer_1);
if ((file_descriptor = open(buffer_1, O_RDONLY)) >= 0) {
printf("\n\nFile opened...");
character_count = read(file_descriptor, buffer_2, BUFSIZE);
while (character_count > 0) {
printf("\n\nSending file...");
write(socket_descriptor_2, buffer_2, character_count);
printf("\n\nPrinting content of file:\n");
for (i = 0; i < character_count; i++)
printf("%c", buffer_2[i]);
printf("\n");
if (i == character_count)
break;
}
}
else
printf("\n\nRequested file is not present...\n\n");
close(file_descriptor);
close(socket_descriptor_2);
}
